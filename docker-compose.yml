services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - mynetwork
    restart: always

  web:
    build: .
    command: bash -c "python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 
      mama_to_be.wsgi:application"
    volumes:
      - .:/app
      - ./static:/app/static
      - ./staticfiles:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${SECRET_KEY}
    env_file:
      - .env
    networks:
      - mynetwork
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000" ]
      interval: 30s
      retries: 3

  nginx:
    image: nginx:alpine
    volumes:
      - ./staticfiles:/app/staticfiles
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
